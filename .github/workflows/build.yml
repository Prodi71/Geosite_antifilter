name: Build geosite.dat
on:
  workflow_dispatch:
  schedule:
    - cron: '0 7 * * *'  
  push:
    branches:
    - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        
          
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set variables
        run: |
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
      
      - name: Create release directory
        run: mkdir data 
                  
      - name: Get latest Antifilter domains
        run: |
          curl -sSL  https://community.antifilter.download/list/domains.lst -o antifilter
          mv antifilter data
                    
        shell: bash 
        
      - name: Build geosite.dat file
        run: |
           go run ./  --outputdir=./ --exportlists=antifilter 
           cp geoip.dat release
           
      - name: Generate geosite.dat sha256 hash
        run: |
          sha256sum geosite.dat > geosite.dat.sha256sum
   
      - name: Git push assets to "release" branch
        run: |
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add geosite.dat
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release

      - name: Release and upload assets
        run: |
          gh release create ${{ env.TAG_NAME }} --generate-notes --latest --title ${{ env.RELEASE_NAME }} ./geosite.dat ./geosite.dat.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}